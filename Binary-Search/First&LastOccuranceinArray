int binarySearch(vector<int>& nums, int target, bool isSearchingLeft) {
        int left = 0;
        int right = nums.size() - 1;
        int idx = -1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (nums[mid] > target) {
                right = mid - 1;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                idx = mid;
                if (isSearchingLeft) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            }
        }
        
        return idx;
}
vector<int> searchRange(vector<int> &arr, int x)
{
	// Write your code here.
	vector<int> result = {-1, -1};
    int left = binarySearch(arr, x, true);
    int right = binarySearch(arr, x, false);
    result[0] = left;
    result[1] = right;
    return result;
}
